class Node{
    constructor(value){
        this.value=value;
        this.next=null;
    }
}

class SingleLinkedList{
    constructor(){
        this.head=null;
        this.tail=null;
        this.length=0;
    }

    push(value){
        let newVal= new Node(value);
        if(this.head === null){
            this.head=newVal;
            this.tail=newVal;
        }
        else{
            this.tail.next = newVal;
            this.tail=newVal;
        }
            this.length +=1;
            return this;
    }

    pop(){
        if(!this.head) return undefined;

        let currentNode= this.head;
        let temp;
        while(currentNode.next){
            temp=currentNode;
            currentNode=currentNode.next;
        }
        this.tail=temp;
        this.tail.next=null;
        this.length -= 1;
        if(this.length==0){
            this.head=null;
            this.tail=null;
        }
        return currentNode;
    }

    shift(){
        if(!this.head) return undefined;

        let currentHead= this.head;
        this.head=this.head.next;
        this.length -= 1
        if(this.length == 0){
            this.head =null;
            this.tail=null;
        }
        return currentHead;
    }

}